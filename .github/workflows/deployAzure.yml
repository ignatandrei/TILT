name: Deploy to Azure

on:
  push:
    tags:
      - v*.**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: false
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
          include-prerelease: false

      # - name: Set up node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '16.13.0'
          

      - name: Build backend with dotnet
        run: |
            cd src/backend/Net8/Net8TILT 
            dotnet build --configuration Release

      - name: Build frontend with dotnet
        run: |
            cd src/frontend/TiltBlazor8/TiltBlazor8/TiltBlazor8.Blazor 
            dotnet build --configuration Release -o build
            Copy-Item .\build\wwwroot\* ..\..\..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\ReactTilt\ -Recurse
    
      - name: Build React Site 1
        shell: pwsh
        run: |
            node -v
            npm -v
            cd src/frontend/react-tilt/
            npm i
            npm run buildAzure
            remove-item ..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\ReactTilt\index.html
            echo afterDelete
            gci ..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\ReactTilt\ |  % { Write-Host $_.FullName }
            Copy-Item .\build\* ..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\ReactTilt\ -Recurse
            echo afterCopy
            gci ..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\ReactTilt\ |  % { Write-Host $_.FullName }
      - name: Build Angular Site 1
        shell: pwsh
        run: |
            node -v
            npm -v
            cd src/frontend/AngTilt14/
            npm i
            npm run buildAzure
            remove-item ..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\AngTilt\index.html
            dir .\dist\AngTilt\* 
            Copy-Item .\dist\AngTilt\* ..\..\backend\Net8\Net8TILT\Net8TILT\Net8TILT.WebAPI\wwwroot\AngTilt\
      - name: dotnet publish
        shell: pwsh
        run: |
            cd src/backend/Net8/Net8TILT
            #dotnet tool restore
            # gci -recurse |  % { Write-Host $_.FullName }
            #dotnet dotnet-project-licenses -i ./Net8TILT/Net8TILT.WebAPI -o --outfile NetTilt/Net8TILT.WebAPI/wwwroot/netcorelicences.txt -t
            # ls -lh
            # .\AOPMethod.ps1
            cd Net8TILT/Net8TILT.WebAPI 
            copy-item ./wwwroot/AngTilt/3rdpartylicenses.txt ./wwwroot/ 
            gci ./wwwroot/ |  % { Write-Host $_.FullName } 
            dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp -r linux-x64 --no-self-contained

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'TILTWebApp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_72419C7672544AC09772BC40541107F7 }}
          package: .