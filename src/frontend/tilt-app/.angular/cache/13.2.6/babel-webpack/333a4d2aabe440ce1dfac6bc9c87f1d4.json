{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\shadow\\\\OneDrive\\\\Portofoliu\\\\TILT\\\\src\\\\frontend\\\\tilt-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { f as readTask, c as writeTask } from './index-b3eecb14.js';\nimport { a as findClosestIonContent, s as scrollToTop } from './index-7cd5eefa.js';\nimport { c as componentOnReady } from './helpers-4d272360.js';\nimport './index-9ac92660.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n\n      if (!el) {\n        return;\n      }\n\n      const contentEl = findClosestIonContent(el);\n\n      if (contentEl) {\n        new Promise(resolve => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask( /*#__PURE__*/_asyncToGenerator(function* () {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            yield scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          }));\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };","map":{"version":3,"sources":["C:/Users/shadow/OneDrive/Portofoliu/TILT/src/frontend/tilt-app/node_modules/@ionic/core/dist/esm/status-tap-c33c4b3c.js"],"names":["f","readTask","c","writeTask","a","findClosestIonContent","s","scrollToTop","componentOnReady","startStatusTap","win","window","addEventListener","width","innerWidth","height","innerHeight","el","document","elementFromPoint","contentEl","Promise","resolve","then","style","setProperty","removeProperty"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,QAAd,EAAwBC,CAAC,IAAIC,SAA7B,QAA8C,qBAA9C;AACA,SAASC,CAAC,IAAIC,qBAAd,EAAqCC,CAAC,IAAIC,WAA1C,QAA6D,qBAA7D;AACA,SAASL,CAAC,IAAIM,gBAAd,QAAsC,uBAAtC;AACA,OAAO,qBAAP;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,GAAG,GAAGC,MAAZ;AACAD,EAAAA,GAAG,CAACE,gBAAJ,CAAqB,WAArB,EAAkC,MAAM;AACtCX,IAAAA,QAAQ,CAAC,MAAM;AACb,YAAMY,KAAK,GAAGH,GAAG,CAACI,UAAlB;AACA,YAAMC,MAAM,GAAGL,GAAG,CAACM,WAAnB;AACA,YAAMC,EAAE,GAAGC,QAAQ,CAACC,gBAAT,CAA0BN,KAAK,GAAG,CAAlC,EAAqCE,MAAM,GAAG,CAA9C,CAAX;;AACA,UAAI,CAACE,EAAL,EAAS;AACP;AACD;;AACD,YAAMG,SAAS,GAAGf,qBAAqB,CAACY,EAAD,CAAvC;;AACA,UAAIG,SAAJ,EAAe;AACb,YAAIC,OAAJ,CAAaC,OAAD,IAAad,gBAAgB,CAACY,SAAD,EAAYE,OAAZ,CAAzC,EAA+DC,IAA/D,CAAoE,MAAM;AACxEpB,UAAAA,SAAS,iCAAC,aAAY;AACpB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYiB,YAAAA,SAAS,CAACI,KAAV,CAAgBC,WAAhB,CAA4B,YAA5B,EAA0C,QAA1C;AACA,kBAAMlB,WAAW,CAACa,SAAD,EAAY,GAAZ,CAAjB;AACAA,YAAAA,SAAS,CAACI,KAAV,CAAgBE,cAAhB,CAA+B,YAA/B;AACD,WAXQ,EAAT;AAYD,SAbD;AAcD;AACF,KAxBO,CAAR;AAyBD,GA1BD;AA2BD,CA7BD;;AA+BA,SAASjB,cAAT","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { f as readTask, c as writeTask } from './index-b3eecb14.js';\nimport { a as findClosestIonContent, s as scrollToTop } from './index-7cd5eefa.js';\nimport { c as componentOnReady } from './helpers-4d272360.js';\nimport './index-9ac92660.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"]},"metadata":{},"sourceType":"module"}