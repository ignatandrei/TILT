//7.this was autogenerated by a tool. Do not modify! Use partial
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using GeneratorFromDB;
using Microsoft.EntityFrameworkCore;

//modified 2023.12.15
namespace Generated;

//ADDED by code generator
public interface I_TILT_Note_Table 
{
        long ID { get; set; }
                long IDURL { get; set; }
                string Text { get; set; }
                string? Link { get; set; }
                DateTime? ForDate { get; set; }
                string? TimeZoneString { get; set; }
            public string ToFullPropertyString();
		
}

public class TILT_Note_Table : I_TILT_Note_Table
{
    public string ToFullPropertyString(){
        string data="";
                data += "ForDate=" +this.ForDate;
            data += "ID=" +this.ID;
            data += "IDURL=" +this.IDURL;
            data += "Link=" +this.Link;
            data += "Text=" +this.Text;
            data += "TimeZoneString=" +this.TimeZoneString;
            return data;
    }

    public static MetaTable metaData = new("TILT_Note");
    static TILT_Note_Table (){
        MetaColumn mc=null;
        mc=new ("ID","long",false);                
        mc.IsPk = false ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("IDURL","long",false);                
        mc.IsPk = false ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("Text","string",false);                
        mc.IsPk = false ;
        mc.TypeJS = "string";
        metaData.AddColumn(mc);
        mc=new ("Link","string",true);                
        mc.IsPk = false ;
        mc.TypeJS = "string|null";
        metaData.AddColumn(mc);
        mc=new ("ForDate","DateTime?",true);                
        mc.IsPk = false ;
        mc.TypeJS = "Date";
        metaData.AddColumn(mc);
        mc=new ("TimeZoneString","string",true);                
        mc.IsPk = false ;
        mc.TypeJS = "string|null";
        metaData.AddColumn(mc);
 //done with foreach property in static constructor
    }
        public long ID { get; set; }
                public long IDURL { get; set; }
                public string Text { get; set; }
                public string? Link { get; set; }
                public DateTime? ForDate { get; set; }
                public string? TimeZoneString { get; set; }
             public void CopyFrom(I_TILT_Note_Table other)  {
        this.ID = other.ID;
                this.IDURL = other.IDURL;
                this.Text = other.Text;
                this.Link = other.Link;
                this.ForDate = other.ForDate;
                this.TimeZoneString = other.TimeZoneString;
            }

    public static explicit operator TILT_Note_Table?(TILT_Note obj) { 
        if(obj == null)
            return null;
            //System.Diagnostics.Debugger.Break();
         var ret= new TILT_Note_Table();
         ret.CopyFrom(obj as I_TILT_Note_Table );
         return ret;
     }
     public static explicit operator TILT_Note?(TILT_Note_Table obj) { 
        if(obj == null)
            return null;
            //System.Diagnostics.Debugger.Break();
         var ret= new TILT_Note();
         ret.CopyFrom(obj as I_TILT_Note_Table) ;
         return ret;
     }



}
public partial class TILT_Note : I_TILT_Note_Table
{

    public string ToFullPropertyString(){
        string data="";
                data += "ForDate=" +this.ForDate;
            data += "ID=" +this.ID;
            data += "IDURL=" +this.IDURL;
            data += "Link=" +this.Link;
            data += "Text=" +this.Text;
            data += "TimeZoneString=" +this.TimeZoneString;
            return data;
    }

     public void CopyFrom(I_TILT_Note_Table other)  {
        this.ID = other.ID;
                this.IDURL = other.IDURL;
                this.Text = other.Text;
                this.Link = other.Link;
                this.ForDate = other.ForDate;
                this.TimeZoneString = other.TimeZoneString;
            }

}

//for TILT_Note 
public enum eTILT_NoteColumns {
    None = 0
        ,ID 
                ,IDURL 
                ,Text 
                ,Link 
                ,ForDate 
                ,TimeZoneString 
        }

//finish ADDED by code generator

[Keyless]

public partial class TILT_Note
{
    public long ID { get; set; }

    public long IDURL { get; set; }

    [StringLength(150)]
    public string Text { get; set; } = null!;

    [StringLength(500)]
    public string? Link { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ForDate { get; set; }

    [StringLength(350)]
    public string? TimeZoneString { get; set; }
}


